import { Component, OnInit } from '@angular/core';
import {ApiService} from "../../services/api.service";
import {FormBuilder} from "@angular/forms";
import { LoadingService } from '../../services/loading.service';

@Component({
  selector: 'app-btransactions',
  templateUrl: './btransactions.component.html',
  styleUrls: ['./btransactions.component.scss']
})
export class BTransactionsComponent implements OnInit {


  bTransactionsList: any[]= []
  bTransaction: any;
  isVisible = false;
  bTransactionForm= this.fb.group({
    stat: [],
    err: [],
    file: [],
    id: [],
    source_ALGORITHM: [],
    epi_42_48_FULL: [],
    merchant_ACCEPT: [],
    clearing_GROUP: [],
    state_ID: [],
    empc_FILE_ID: [],
    card: [],
    slip_NR: [],
    city: [],
    country: [],
    merchant: [],
    abvr_NAME: [],
    tran_TYPE: [],
    terminal: [],
    mcc_CODE: [],
    ref_NUMBER: [],
    rec_NUM: [],
    mtid: [],
    rec_CENTR: [],
    send_CENTR: [],
    iss_CMI: [],
    appr_SRC: [],
    appr_CODE: [],
    cash_BACK: [],
    currency: [],
    amount: [],
    send_CMI: [],
    e_TIME: [],
    ccy_EXP: [],
    acq_BANK: [],
    batch_NR: [],
    acq_BRANCH: [],
    member: [],
    exp_DATE: [],
    fee: [],
    stan: [],
    sb_AMOUNT: [],
    sb_CNVRATE: [],
    sb_FEE: [],
    sb_CNVDATE: [],
    i_AMOUNT: [],
    i_CSHBACK: [],
    i_FEE: [],
    settl_CMI: [],
    ibnk_CCY: [],
    i_CCYEXP: [],
    sb_CCYEXP: [],
    e_DATE: [],
    sbnk_CCY: [],
    sb_CSHBACK: [],
    card_SEQ_NR: [],
    file_DATE: [],
    file_ID: [],
    pr_AMOUNT: [],
    pr_FEE: [],
    ms_NUMBER: [],
    moto_IND: [],
    term_NR: [],
    pr_CNVDATE: [],
    susp_STATUS: [],
    prnk_CCY: [],
    transact_ROW: [],
    pr_CSHBACK: [],
    i_CNVDATE: [],
    msg_TYPE: [],
    batch_ID: [],
    card_TYPE: [],
    acqref_NR: [],
    proc_CLASS: [],
    org_MSG_TYPE: [],
    settl_DATE: [],
    pr_CCYEXP: [],
    pr_CNVRATE: [],
    point_CODE: [],
    i_CNVRATE: [],
    ecmc_FEE: [],
    e_REGION: [],
    tran_INFO: [],
    settl_NR: [],
    proc_CODE: [],
    msg_CATEGORY: [],
    tr_FEE: [],
    fld_043: [],
    fld_SH6: [],
    msc: [],
    batch_DATE: [],
    account_NR: [],
    fld_123_1: [],
    fld_095: [],
    authoriz_ROW: [],
    fld_098: [],
    other_FEE1: [],
    other_FEE2: [],
    fld_039: [],
    fld_040: [],
    other_FEE4: [],
    fld_102: [],
    fld_103: [],
    fld_104: [],
    other_CODE: [],
    fld_015: [],
    epi_42_48: [],
    audit_DATE: [],
    other_FEE3: [],
    other_FEE5: [],
    fld_003: [],
  })

  constructor(
    public loadingService: LoadingService,
    private apiServices: ApiService,
    private fb: FormBuilder
  ) { }

  ngOnInit(): void {
    this.getBTransactions()
  }

  parseData(data: any){
    this.bTransactionForm.patchValue({
      stat: data.stat_,
      err: data.err_,
      file: data.file_,
      id: data.id,
      source_ALGORITHM: data.source_ALGORITHM,
      epi_42_48_FULL: data.epi_42_48_FULL,
      merchant_ACCEPT: data.merchant_ACCEPT,
      clearing_GROUP: data.clearing_GROUP,
      state_ID: data.state_ID,
      empc_FILE_ID: data.empc_FILE_ID,
      card: data.card,
      slip_NR: data.slip_NR,
      city: data.city,
      country: data.country,
      merchant: data.merchant,
      abvr_NAME: data.abvr_NAME,
      tran_TYPE: data.tran_TYPE,
      terminal: data.terminal,
      mcc_CODE: data.mcc_CODE,
      ref_NUMBER: data.ref_NUMBER,
      rec_NUM: data.rec_NUM,
      mtid: data.mtid,
      rec_CENTR: data.rec_CENTR,
      send_CENTR: data.send_CENTR,
      iss_CMI: data.iss_CMI,
      appr_SRC: data.appr_SRC,
      appr_CODE: data.appr_CODE,
      cash_BACK: data.cash_BACK,
      currency: data.currency,
      amount: data.amount,
      send_CMI: data.send_CMI,
      e_TIME: data.e_TIME,
      ccy_EXP: data.ccy_EXP,
      acq_BANK: data.acq_BANK,
      batch_NR: data.batch_NR,
      acq_BRANCH: data.acq_BRANCH,
      member: data.member,
      exp_DATE: data.exp_DATE,
      fee: data.fee,
      stan: data.stan,
      sb_AMOUNT: data.sb_AMOUNT,
      sb_CNVRATE: data.sb_CNVRATE,
      sb_FEE: data.sb_FEE,
      sb_CNVDATE: data.sb_CNVDATE,
      i_AMOUNT: data.i_AMOUNT,
      i_CSHBACK: data.i_CSHBACK,
      i_FEE: data.i_FEE,
      settl_CMI: data.settl_CMI,
      ibnk_CCY: data.ibnk_CCY,
      i_CCYEXP: data.i_CCYEXP,
      sb_CCYEXP: data.sb_CCYEXP,
      e_DATE: data.e_DATE,
      sbnk_CCY: data.sbnk_CCY,
      sb_CSHBACK: data.sb_CSHBACK,
      card_SEQ_NR: data.card_SEQ_NR,
      file_DATE: data.file_DATE,
      file_ID: data.file_ID,
      pr_AMOUNT: data.pr_AMOUNT,
      pr_FEE: data.pr_FEE,
      ms_NUMBER: data.ms_NUMBER,
      moto_IND: data.moto_IND,
      term_NR: data.term_NR,
      pr_CNVDATE: data.pr_CNVDATE,
      susp_STATUS: data.susp_STATUS,
      prnk_CCY: data.prnk_CCY,
      transact_ROW: data.transact_ROW,
      pr_CSHBACK: data.pr_CSHBACK,
      i_CNVDATE: data.i_CNVDATE,
      msg_TYPE: data.msg_TYPE,
      batch_ID: data.batch_ID,
      card_TYPE: data.card_TYPE,
      acqref_NR: data.acqref_NR,
      proc_CLASS: data.proc_CLASS,
      org_MSG_TYPE: data.org_MSG_TYPE,
      settl_DATE: data.settl_DATE,
      pr_CCYEXP: data.pr_CCYEXP,
      pr_CNVRATE: data.pr_CNVRATE,
      point_CODE: data.point_CODE,
      i_CNVRATE: data.i_CNVRATE,
      ecmc_FEE: data.ecmc_FEE,
      e_REGION: data.e_REGION,
      tran_INFO: data.tran_INFO,
      settl_NR: data.settl_NR,
      proc_CODE: data.proc_CODE,
      msg_CATEGORY: data.msg_CATEGORY,
      tr_FEE: data.tr_FEE,
      fld_043: data.fld_043,
      fld_SH6: data.fld_SH6,
      msc: data.msc,
      batch_DATE: data.batch_DATE,
      account_NR: data.account_NR,
      fld_123_1: data.fld_123_1,
      fld_095: data.fld_095,
      authoriz_ROW: data.authoriz_ROW,
      fld_098: data.fld_098,
      other_FEE1: data.other_FEE1,
      other_FEE2: data.other_FEE2,
      fld_039: data.fld_039,
      fld_040: data.fld_040,
      other_FEE4: data.other_FEE4,
      fld_102: data.fld_102,
      fld_103: data.fld_103,
      fld_104: data.fld_104,
      other_CODE: data.other_CODE,
      fld_015: data.fld_015,
      epi_42_48: data.epi_42_48,
      audit_DATE: data.audit_DATE,
      other_FEE3: data.other_FEE3,
      other_FEE5: data.other_FEE5,
      fld_003: data.fld_003,
    })
  }

  handleCancel(): void {
    this.isVisible = false;
  }

  getBTransactions() {
    this.apiServices.bTransactions().subscribe((res) => {
      this.bTransactionsList = res;

    })
  }

  itemInfo(item: any){
    this.isVisible = true;
    this.bTransaction = item
    this.parseData(item)
    // Utils.setToSessionStorage('exptItem', item)

  }
}
